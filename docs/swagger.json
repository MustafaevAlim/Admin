{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Echo server.",
        "title": "Echo API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth": {
            "post": {
                "description": "Проверка авторизации пользователя по имени и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные авторизации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректное имя или пароль, или ошибка ввода",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/socials/get": {
            "get": {
                "description": "Возвращает все просмотры соцсетей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socials"
                ],
                "summary": "Получить общее количество просмотров по соцсетям",
                "responses": {
                    "200": {
                        "description": "Список общих просмотров",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный email",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Извлекает данные пользователя на основе предоставленного идентификатора Telegram.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить информацию о пользователе с помощью Telegram ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Telegram user ID",
                        "name": "tgID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/model.UserInfo"
                        }
                    },
                    "404": {
                        "description": "Error message: User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error message: Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/add": {
            "post": {
                "description": "Добавляет нового пользователя, если его ID в Telegram (TgId) еще не существует в системе, если существует добавляет новый канал соцсети",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Добавление пользователя",
                "parameters": [
                    {
                        "description": "Данные для добавления пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAdd"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/model.UserAdd"
                        }
                    },
                    "400": {
                        "description": "Неправильный ввод данных",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/all": {
            "get": {
                "description": "Получение списка всех пользователей.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserInfo"
                            }
                        }
                    }
                }
            }
        },
        "/users/balance": {
            "put": {
                "description": "Обновляет баланс пользователя на заданное значение.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновление баланса пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Telegram ID пользователя",
                        "name": "tgID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Значение для обновления баланса",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "succes",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "ошибка обновления баланса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/views": {
            "get": {
                "description": "Извлекает количество просмотров для социальной платформы пользователя на основе предоставленного идентификатора Telegram и названия социальной платформы.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить просмотры о конкретной социальной платформе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Social platform name",
                        "name": "social",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Telegram user ID",
                        "name": "tgID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count of views and link",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Auth": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserAdd": {
            "type": "object",
            "required": [
                "count_views",
                "social_link",
                "social_name",
                "tgId",
                "wallet"
            ],
            "properties": {
                "count_views": {
                    "type": "integer"
                },
                "social_link": {
                    "type": "string",
                    "minLength": 4
                },
                "social_name": {
                    "type": "string"
                },
                "tgId": {
                    "type": "string"
                },
                "wallet": {
                    "type": "string"
                }
            }
        },
        "model.UserInfo": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "channels": {
                    "type": "integer"
                },
                "countViews": {
                    "type": "integer"
                },
                "referrals": {
                    "type": "integer"
                },
                "tgId": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "wallet": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите JWT токен следующим образом: \"Bearer {токен}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}