{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Echo server.",
        "title": "Echo API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth": {
            "post": {
                "description": "Проверка авторизации пользователя по имени и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные авторизации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректное имя или пароль, или ошибка ввода",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/channels/all": {
            "get": {
                "description": "Retrieves the total views for different types of channels (YouTube, TikTok, Instagram, Facebook)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get total views by channel type",
                "responses": {
                    "200": {
                        "description": "Map of channel types and their total views",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/parsing/add": {
            "post": {
                "description": "Adds parsing information to the repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parsing"
                ],
                "summary": "Add parsing information",
                "parameters": [
                    {
                        "description": "Parsing Information",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ParsInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or incorrect name/password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieves information about a user based on the provided username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/model.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/all": {
            "get": {
                "description": "Получение списка всех пользователей.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserInfo"
                            }
                        }
                    }
                }
            }
        },
        "/users/confirm": {
            "post": {
                "description": "Confirms the user's channel by username and channel URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Confirm a user channel",
                "parameters": [
                    {
                        "description": "User confirmation data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserConfirm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "confirmed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or incorrect url/username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/views": {
            "get": {
                "description": "Retrieves the list of channels and their views for a specific user based on the provided username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get views for user channels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of channels with their views",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ChannelsInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/withdraw/all": {
            "get": {
                "description": "Retrieves a list of all withdraw notes from the repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "Get all withdraw notes",
                "responses": {
                    "200": {
                        "description": "List of all withdraw notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.WithdrawInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/withdraw/cancel": {
            "post": {
                "description": "Confirms a withdrawal for a specific user based on the provided username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "Confirm a withdrawal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user whose withdrawal is being confirmed",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmation message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/withdraw/confirm": {
            "post": {
                "description": "Confirms a withdrawal for a specific user based on the provided username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "Confirm a withdrawal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user whose withdrawal is being confirmed",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmation message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Auth": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.ChannelsInfo": {
            "type": "object",
            "properties": {
                "countViews": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.ParsInfo": {
            "type": "object",
            "required": [
                "type_channel",
                "url"
            ],
            "properties": {
                "type_channel": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.UserConfirm": {
            "type": "object",
            "required": [
                "url_channel",
                "username"
            ],
            "properties": {
                "url_channel": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserInfo": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "channels": {
                    "type": "integer"
                },
                "countViews": {
                    "type": "integer"
                },
                "referrals": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "wallet": {
                    "type": "string"
                }
            }
        },
        "model.WithdrawInfo": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "confirmed": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "wallet": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите JWT токен следующим образом: \"Bearer {токен}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}